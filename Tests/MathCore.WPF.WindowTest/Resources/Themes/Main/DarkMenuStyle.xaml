<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="DarkMenu.DarkHighlightedColorBrush" Color="#666666"/>
    <SolidColorBrush x:Key="DarkMenu.Highlight.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="DarkMenu.DarkDisabledColorBrush" Color="#6F6F6F"/>
    <SolidColorBrush x:Key="DarkMenu.Disabled.Foreground" Color="#FF707070"/>
    <SolidColorBrush x:Key="DarkMenu.MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
    <SolidColorBrush x:Key="DarkMenu.MenuItem.Highlight.Disabled.Border" Color="#21000000"/>

    <MenuScrollingVisibilityConverter x:Key="DarkMenu.MenuScrolling.VisibilityConverter" />

    <ControlTemplate x:Key="DarkMenu.ScrollButton.Template" TargetType="RepeatButton">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkBlue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DarkMenu.ScrollButton.Style" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Template" Value="{StaticResource DarkMenu.ScrollButton.Template}"/>
    </Style>

    <ControlTemplate x:Key="DarkMenu.DarkMenuScrollViewer.Template" TargetType="{x:Type ScrollViewer}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1">
                <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
            </Border>
            <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource DarkMenu.ScrollButton.Style}" 
                          Focusable="False"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Visibility>
                    <MultiBinding FallbackValue="Visibility.Collapsed"
                                  Converter="{StaticResource DarkMenu.MenuScrolling.VisibilityConverter}"
                                  ConverterParameter="0">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight"/>
                    </MultiBinding>
                </RepeatButton.Visibility>
                <Path Fill="{TemplateBinding Foreground}" Data="M0,4 L3,0 L6,4 Z"/>
            </RepeatButton>
            <RepeatButton Grid.Row="2" Height="18"
                          Style="{StaticResource DarkMenu.ScrollButton.Style}" 
                          Focusable="False"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <RepeatButton.Visibility>
                    <MultiBinding FallbackValue="Visibility.Collapsed"
                                  Converter="{StaticResource DarkMenu.MenuScrolling.VisibilityConverter}"
                                  ConverterParameter="100">
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight"/>
                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight"/>
                    </MultiBinding>
                </RepeatButton.Visibility>
                <Path Fill="{TemplateBinding Foreground}" Data="M0,0 L3,4 L6,0 Z"/>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DarkMenu.ScrollViewer.Style" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template" Value="{StaticResource DarkMenu.DarkMenuScrollViewer.Template}"/>
    </Style>

    <ControlTemplate x:Key="DarkMenu.Template" TargetType="{x:Type Menu}">
        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}">
            <StackPanel Orientation="Horizontal" ClipToBounds="True" IsItemsHost="True"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="DarkMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=Control}}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Control}}"/>
        <Setter Property="Template" Value="{StaticResource DarkMenu.Template}"/>
    </Style>

    <ControlTemplate x:Key="DarkMenu.Item.Separator.Template" TargetType="{x:Type Separator}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                <ColumnDefinition Width="13"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="2" Grid.ColumnSpan="4" Margin="10,0" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DarkMenu.Item.Separator.Style" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="Template" Value="{StaticResource DarkMenu.Item.Separator.Template}"/>
    </Style>

    <ControlTemplate x:Key="DarkMenu.Item.TopLevelHeader.Template" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3" ContentSource="Header" RecognizesAccessKey="True"/>
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border x:Name="SubMenuBorder" SnapsToDevicePixels="True"
                            CornerRadius="0"
                            Padding="1"
                            BorderBrush="DarkGray"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource DarkMenu.ScrollViewer.Style}">
                            <StackPanel IsItemsHost="True" Margin="1"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" 
                                        Grid.IsSharedSizeScope="True"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMenu.DarkHighlightedColorBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubMenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubMenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DarkMenu.Item.TopLevelItem.Template" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1">
            <Grid>
                <ContentPresenter Margin="6,3" ContentSource="Header" RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMenu.DarkHighlightedColorBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="#707070"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="DarkMenu.Item.CheckMark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
    
    <SolidColorBrush x:Key="DarkMenu.Item.Foreground" Color="WhiteSmoke"/>

    <ControlTemplate x:Key="DarkMenu.Item.SubMenuItem.Template" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" 
                Background="{TemplateBinding Background}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                Height="22" 
                SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" x:Name="Icon" ContentSource="Icon"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                  Width="16" Height="16" Margin="3"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border Grid.Column="0" x:Name="GlyphPanel"
                        BorderThickness="1" BorderBrush="DarkGray" 
                        ClipToBounds="False"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Width="22" Height="20"
                        Margin="-1,0,0,0"
                        Visibility="Hidden">
                    <Path x:Name="Glyph" Data="{StaticResource DarkMenu.Item.CheckMark}"
                          Fill="{StaticResource DarkMenu.Item.Foreground}" 
                          Width="7" Height="7"
                          FlowDirection="LeftToRight"
                          SnapsToDevicePixels="True" />
                </Border>
                <Border Grid.Column="1" BorderThickness="0,0,1,0" BorderBrush="WhiteSmoke" Margin="0,0,3,0"/>
                <ContentPresenter Grid.Column="2" x:Name="MenuHeaderContainer" ContentSource="Header" 
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" x:Name="MenuGestureText" 
                           Margin="{TemplateBinding Padding}" 
                           Opacity="0.7" 
                           Text="{TemplateBinding InputGestureText}" 
                           VerticalAlignment="Center"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMenu.DarkHighlightedColorBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkMenu.Highlight.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DarkMenu.DarkDisabledColorBrush}"/>
                <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource DarkMenu.Disabled.Foreground}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource DarkMenu.Disabled.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMenu.MenuItem.Highlight.Disabled.Background}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkMenu.MenuItem.Highlight.Disabled.Border}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DarkMenu.Item.SubmenuHeader.Template" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" x:Name="Icon" Margin="6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,7 L4,3.5 Z" Fill="LightGray"/>
                <Popup Grid.Column="0" x:Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" 
                            SnapsToDevicePixels="True" 
                            BorderThickness="1"
                            Background="Black"
                            BorderBrush="DarkGray">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkMenu.DarkHighlightedColorBrush}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DarkMenu.Item.Style" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="#1E1E1E"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource DarkMenu.Item.TopLevelHeader.Template}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#7C7C7C"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource DarkMenu.Item.TopLevelItem.Template}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource DarkMenu.Item.SubmenuHeader.Template}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource DarkMenu.Item.SubMenuItem.Template}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>