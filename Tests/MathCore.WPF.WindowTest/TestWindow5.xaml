<Window x:Class="MathCore.WPF.WindowTest.TestWindow5"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="clr-namespace:MathCore.WPF.WindowTest"
        xmlns:vm="clr-namespace:MathCore.WPF.WindowTest.ViewModels"
        xmlns:b="clr-namespace:MathCore.WPF.Behaviors;assembly=MathCore.WPF"
        xmlns:nodes="clr-namespace:MathCore.MathParser.ExpressionTrees.Nodes;assembly=MathCore"
        DataContext="{Binding Model5, Source={StaticResource Locator}}"
        Background="{StaticResource BS-Brush-Body-BG-Dark}"
        Title="TestWindow5" 
        Width="800" Height="450">
    <Window.Resources>
        <Style TargetType="{x:Type Menu}">
            <Setter Property="DockPanel.Dock" Value="Top"/>
            <Setter Property="Background" Value="{StaticResource BS-Brush-Body-BG-Dark}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Menu.Static.Border" Color="DimGray"/>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="WhiteSmoke"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="DarkSlateGray"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#6B000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#AA000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>

        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>

        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" 
                                Background="Transparent" 
                                BorderBrush="Transparent" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" 
                                      ContentSource="Icon"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Width="16" Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Path x:Name="GlyphPanel" Grid.Column="0" 
                          Data="{StaticResource Checkmark}" 
                          FlowDirection="LeftToRight" 
                          Fill="{StaticResource Menu.Static.Foreground}" 
                          Margin="3" 
                          VerticalAlignment="Center" 
                          Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header" Grid.Column="1" 
                                      Margin="{TemplateBinding Padding}" 
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" 
                                      ContentSource="Icon"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Width="16" Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Path x:Name="GlyphPanel" Grid.Column="0" 
                          Data="{StaticResource Checkmark}" 
                          FlowDirection="LeftToRight" 
                          Fill="{TemplateBinding Foreground}" 
                          Margin="3" 
                          VerticalAlignment="Center" 
                          Visibility="Collapsed"/>
                    <ContentPresenter Grid.Column="1" ContentSource="Header"
                                      Margin="{TemplateBinding Padding}" 
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" Grid.Column="0" 
                           AllowsTransparency="true" 
                           Focusable="false" 
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           Placement="Bottom" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                           PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder" 
                                Background="{StaticResource BS-Brush-Body-BG-Dark}" 
                                BorderBrush="{StaticResource Menu.Static.Border}" 
                                BorderThickness="1" 
                                Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" 
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas VerticalAlignment="Top" HorizontalAlignment="Left" Width="0" Height="0">
                                        <Rectangle x:Name="OpaqueRect" 
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <Rectangle Fill="{StaticResource Menu.Static.Separator}" 
                                               HorizontalAlignment="Left" 
                                               Margin="29,2,0,2" 
                                               Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Height="22" 
                    SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" 
                                      ContentSource="Icon"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Width="16" Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Border x:Name="GlyphPanel" Grid.Column="0"
                            Background="{StaticResource MenuItem.Selected.Background}" 
                            BorderBrush="{StaticResource MenuItem.Selected.Border}" 
                            BorderThickness="1" 
                            ClipToBounds="False"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            Width="22" Height="22"
                            Margin="-1,0,0,0" 
                            Visibility="Hidden">
                        <Path x:Name="Glyph" 
                              Data="{StaticResource Checkmark}" 
                              FlowDirection="LeftToRight" 
                              Fill="{StaticResource Menu.Static.Foreground}"
                              Width="10" Height="11" />
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" Grid.Column="2"
                                      ContentSource="Header"
                                      VerticalAlignment="Center" HorizontalAlignment="Left"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock x:Name="menuGestureText" Grid.Column="4"
                               Text="{TemplateBinding InputGestureText}" 
                               Margin="{TemplateBinding Padding}"
                               VerticalAlignment="Center" 
                               Opacity="0.7" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Height="22" 
                    SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" 
                                      ContentSource="Icon"
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Width="16" Height="16"
                                      Margin="3"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <Border x:Name="GlyphPanel" Grid.Column="0"
                            Background="{StaticResource MenuItem.Highlight.Background}" 
                            BorderBrush="{StaticResource MenuItem.Highlight.Border}" 
                            BorderThickness="1"
                            Width="22" Height="22"
                            Margin="-1,0,0,0"
                            VerticalAlignment="Center"
                            Visibility="Hidden">
                        <Path x:Name="Glyph" 
                              Data="{DynamicResource Checkmark}" 
                              FlowDirection="LeftToRight" 
                              Fill="{StaticResource Menu.Static.Foreground}" 
                              Width="9" Height="11" />
                    </Border>
                    <ContentPresenter Grid.Column="2" ContentSource="Header"
                                      VerticalAlignment="Center" HorizontalAlignment="Left"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <TextBlock Grid.Column="4" 
                               Margin="{TemplateBinding Padding}"
                               Text="{TemplateBinding InputGestureText}" 
                               Opacity="0.7"
                               VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" 
                          Data="{StaticResource RightArrow}"
                          Fill="{StaticResource Menu.Static.Foreground}"
                          VerticalAlignment="Center" HorizontalAlignment="Left"
                          Margin="10,0,0,0" />
                    <Popup x:Name="PART_Popup" Grid.Column="0" 
                           AllowsTransparency="true" 
                           Focusable="false" 
                           HorizontalOffset="-2" 
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           Placement="Right" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                           VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" 
                                Background="{StaticResource BS-Brush-Body-BG-Dark}" 
                                BorderBrush="{StaticResource Menu.Static.Border}" 
                                BorderThickness="1" 
                                Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" 
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas VerticalAlignment="Top" HorizontalAlignment="Left" 
                                            Height="0" Width="0">
                                        <Rectangle x:Name="OpaqueRect" 
                                                   Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                   Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                   Height="{Binding ActualHeight, ElementName=SubMenuBorder}" />
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" 
                                               HorizontalAlignment="Left" 
                                               Margin="29,2,0,2" 
                                               Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource BS-Brush-Body-BG-Dark}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu BorderBrush="Gray" BorderThickness="0,0,0,1" Background="{StaticResource BS-Brush-Body-BG-Dark}">
            <MenuItem Header="File">
                <MenuItem Header="Exit"/>
                <MenuItem Header="Exit"/>
                <MenuItem Header="Exit"/>
                <MenuItem Header="Exit"/>
            </MenuItem>
        </Menu>

        <StatusBar Background="Transparent" Foreground="WhiteSmoke"
                   BorderThickness="0,1,0,0" BorderBrush="DarkGray">
            <StatusBar.ItemContainerStyle>
                <Style TargetType="StatusBarItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </StatusBar.ItemContainerStyle>
            <StatusBarItem MinWidth="300"/>
            <StatusBarItem Width="120">
                <ProgressBar x:Name="ProgressBar" Value="40" Padding="3" Background="Transparent">
                    <ProgressBar.Template>
                        <ControlTemplate TargetType="ProgressBar">
                            <Border x:Name="PART_Track" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="6">
                                <Grid>
                                    <Rectangle x:Name="PART_Indicator"
                                               RadiusX="3"
                                               RadiusY="3"
                                               Fill="Gray"
                                               HorizontalAlignment="Left"
                                    />
                                    <Grid x:Name="Animation" ClipToBounds="True">
                                        <Rectangle x:Name="PART_GlowRect" 
                                               HorizontalAlignment="Left" 
                                               Margin="-100,0,0,0"
                                               Width="100"
                                               Fill="Blue"
                                               RadiusX="3"
                                               RadiusY="3"
                                    />
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </ProgressBar.Template>
                </ProgressBar>
            </StatusBarItem>
            <StatusBarItem>123</StatusBarItem>
        </StatusBar>

        <Grid Margin="10">
            <DockPanel>
                <TextBox DockPanel.Dock="Top" VerticalAlignment="Top" Background="Transparent" 
                         Foreground="WhiteSmoke"
                         CaretBrush="WhiteSmoke"
                         Padding="4" Margin="0,0,0,4"
                         Text="{Binding TestExpr}"/>
                <TextBlock DockPanel.Dock="Top" Foreground="Red" Text="{Binding ExpressionParseException.Message}"
                           Padding="4"/>
                <TreeView Background="Transparent" Foreground="WhiteSmoke" ItemsSource="{Binding ExpressionTree}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type nodes:ExpressionTreeNode}"
                                                  ItemsSource="{Binding RightNodes}">
                            <TextBlock Text="{Binding}" Foreground="WhiteSmoke"/>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <!--<ListBox ItemsSource="{Binding ExpressionTree}" Background="Transparent" Foreground="WhiteSmoke"/>-->
            </DockPanel>
        </Grid>
    </DockPanel>
</Window>
