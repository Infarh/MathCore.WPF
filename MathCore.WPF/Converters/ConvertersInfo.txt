Конвертеры

{Abs}

Берёт модуль числа

{Addition Parameter=5}
{Addition 5}

Прибавляет к значению указанное число

{Average Length=5}
{Average 5}

Усредняет значения с заданной длиной окна выборки

{Bool2Visibility}
{Bool2Visibility Inverted=True}
{Bool2Visibility Collapsed=True}

Выполняет преобразование логического значение в значение Видимости (Видим/Невидим/Коллапсирован визуальный элемент)

<Button Content="Ok" Visibility={Binding Value, Converter={Bool2Visibility}} /> - позволит управлять видимостью кнопки

{CSplineInterp Points='1,3 2.5,7 7.9,12'}

Выполняет сплайн-интерполяцию значений входной величирны по сетке 1 - 2.5 - 7.9 в значение выходной величины по сетке 3 - 7 - 12

{Combine First={Addition 5} Then={Average 10}}
{Combine {Addition 5}, {Average 10}}

Конвертер комбинирует значения других конвертеров. Сперва выполняется первый конвертер, потом значение, полученное от него, передаётся во второй. результатом работы будет значение, полученное от второго конвертера.
Можно в качесвте первого и/или второго вложенного конвертера указывать такой же комбинатор.

{Deviation}

Вычисляет разность между текущим и предыдущим значением

{Divide Parameter=10}
{Divide 10}

Выполняет деление значения на указанное число

{GreaterThan Value=3.14}
{GreaterThan 3.14}

Возвращает истину, если значение больше чем указанный параметр

{GreaterThanOrEqual Value=3.14}
{GreaterThanOrEqual 3.14}

Возвращает истину, если значение больше, либо равно указанному параметру

{InIntervalValue Min=5, Max=7}
{InIntervalValue Min=5, Max=7, MinInclude=True, MaxInclude=True} - параметры можно указывать в произвольном порядке
{InIntervalValue 3} - от -3 до 3
{InIntervalValue 5, 7} 
{InIntervalValue 5, 7, MinInclude=True} 
{InRange ...} - аналог
{OutRange ...} - антипод

Возвращает истину если значение находится в указанном интервале

{Interpolation Points='1.2,3 3.2,7 12,1'}

Выполняет интерполяцию полиномом Лагранжа: Первое значение каждой точки - это "X", второе - "Y".

{Inverse}
{Inverse 5}
{Inverse Parameter=5}

Вычисляет значение f(x) = Parameter / x.
по умолчанию Parameter=1

{IsNaN}
{IsNaN Inverted=True} - наоборот
{IsNaN True} - наоборот

Возвращает истину если вещественное значение эквивалентно NaN (результат деления 0/0)

{IsNegative} - возвращает истину если число меньше 0

{IsNull}
{IsNull Inverted=True} - наоборот
{IsNull True} - наоборот

Возвращает истину если значение равно null (пустая ссыылка)

{IsPositive} - возвращает истину если значение больше 0

{LessThan Value=5} - Истина если значение < 5
{LessThan 5} - Истина если значение < 5
{LessThan 0} - Истина если значение < 0

{LessThanOrEqual Value=5} - Истина если значение <= 5
{LessThanOrEqual 5} - Истина если значение <= 5
{LessThanOrEqual 0} - Истина если значение <= 0

{Linear K=3, B=5} - f(x) = 3*x + 5
{Linear 3, 5} - f(x) = 3*x + 5
{Linear K=3} - f(x) = 3*x
{Linear 3} - f(x) = 3*x

{Mapper MinScale=-200, MaxScale=400, MinValue=-5, MaxValue=5}

Конвертирует физическое значение от -5 до 5 в экранное значение от -200 до 400
Если на указать значение параметра конвертера, то он останется равен 0.

{Mod 5}
{Mod M=5}

Выполняет деление по модулю f(x) = x mod 5

{Multiply Parameter=10}
{Multiply 10}

Умножает значение на указанный параметр (на число)

{NANtoVisibility}
{NANtoVisibility Inverted=True} - наоборот
{NANtoVisibility Inverted=True} - наоборот
{NANtoVisibility Collapsed=True} - коллапсирует

Преобразует вещественное значение в значение видимости элемента. 

{Not} - логическое отрицание (работает для значений типа bool: True/False)

{Null2Visibility}
{Null2Visibility Inverted=True}
{Null2Visibility Collapsed=True}

Преобразует значение пустой ссылки в значение видимости

{Range 5, 7}
{Range Min=5, Max=7}

Ограничивает значение указанным интервалом

{Round} 
{Round 5} 
{Round Digits=5}

Округляет значение до указанного количества знаков после запятой 

{RoundAdaptive} - аналог {Round} но в адаптивном режиме

{Sign} - возвращает знак в виде вещественного числа -1 :: 0 :: +1

{SignValue Delta=5, Inverse=False} возвращает знак числа аналогично {Sign} но рассматривая область +/- 5 как значение 0.
Если число меньше -5 то будет возвращено -1, если между -5..5, то 0, если больше +5 - то +1.

{Subtraction Parameter=5}
{Subtraction 5}

Вычитает заданное значение

{TemperatureC2F} - это конвертер {Linear 0.555555555, -17.777777777} f(x) = 1/1.8 * x - 32/1.8
{TemperatureF2C} - это конвертер {Linear 1.8, 32} f(x) = 1.8*x + 32

{TimeDifferential Parameter=15, IgnoreNaN=False}
{TimeDifferential 15}

Конвертер выполняет дифференцирование значения по времени с запаздыванием. IgnoreNaN указывает игнорировать значения NaN или нет. Если IgnoreNaN=False, то при появлении значения NaN результат становится NaN навсегда.

{Truncate} отбрасывает дробную часть вещественного числа

{dB} - преобразует значение в децибеллы f(x) = 20*log10(x)
{dB ByPower=True} - преобразует значение в децибеллы f(x) = 10*log10(x)
{dB Invert=True} - преобразует значение из децибеллов f(x) = 10^(x/20)
{dB ByPower=True, ByPower=True} - преобразует значение из децибеллов f(x) = 10^(x/10)